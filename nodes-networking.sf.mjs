!async function(t,e){"use strict";e.exports&&e.exports!==globalThis&&Object.defineProperty(e.exports,"__esModule",{value:!0}),t.templates||(t.templates={});var n=sf.dom||sf.$;t.templates,t._sf_internal=t._sf_internal||{body_map:{},_replace(t,e){let a=n(e);return this.body_map[t]&&this.body_map[t].remove(),this.reinitViews&&this.reinitViews(a),this.body_map[t]=a},append(t,e){n(document.body).append(this._replace.apply(this,arguments))},prepend(t,e){n(document.body).prepend(this._replace.apply(this,arguments))}};let a=t.Blackprint.loadScope({url:import.meta.url}),i=(sf.$,await a.getContext("Networking"));a.Sketch.registerInterface("BPIC/Networking/HTTP/Data/Send/Multipart",{template:"Blackprint/nodes/default.sf"},class extends i.IFace.HTTPDataSendMultipart{init(){let t=this,e=a.Port.Union([String,Number,Uint8Array,Blob]);t.on("port.menu",i.EventSlot,(({menu:n,port:a})=>{"input"===a.source&&(Object.keys(t.input).length>1&&n.unshift({title:"Remove port",callback(){t.node.deletePort("input",a.name)}}),n.unshift({title:"Add port",async callback(){let n=await BPEditor.Dialog({title:"Port name:",input:"text"});if(n=n.value,n){if(null!=t.input[n])throw new Error("Port name already exist");t.node.createPort("input",n,e)}}},{title:"Rename port",async callback(){let e=await BPEditor.Dialog({title:"Port name:",text:"Current name: "+a.name,input:"text"});if(e=e.value,e){if(null!=t.input[e])throw new Error("Port name already exist");t.node.renamePort("input",a.name,e)}}}))}))}}),a.Sketch.registerInterface("BPIC/Networking/HTTP/Data/Send/URLEncoded",{template:"Blackprint/nodes/default.sf"},class extends i.IFace.HTTPDataSendURLEncoded{init(){let t=this;t.on("port.menu",i.EventSlot,(({menu:e,port:n})=>{"input"===n.source&&(Object.keys(t.input).length>1&&e.unshift({title:"Remove port",callback(){t.node.deletePort("input",n.name)}}),e.unshift({title:"Add port",async callback(){let e=await BPEditor.Dialog({title:"Port name:",input:"text"});if(e=e.value,e){if(null!=t.input[e])throw new Error("Port name already exist");t.node.createPort("input",e,String)}}},{title:"Rename port",async callback(){let e=await BPEditor.Dialog({title:"Port name:",text:"Current name: "+n.name,input:"text"});if(e=e.value,e){if(null!=t.input[e])throw new Error("Port name already exist");t.node.renamePort("input",n.name,e)}}}))}))}})}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:this,"undefined"!=typeof module?module:{exports:this});
//# sourceMappingURL=nodes-networking.sf.mjs.map